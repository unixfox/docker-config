version: "3.7"
services:
    filtron:
        deploy:
            labels:
                - "caddy.address=searx.be www.searx.be"
                - caddy.targetport=4004
                - caddy.proxy.transparent
                - 'caddy.header_0=/'
                # Enable HTTP Strict Transport Security (HSTS) to force clients to always connect via HTTPS
                - 'caddy.header_0.Strict-Transport-Security="max-age=31536000; includeSubDomains; preload"'
                # Enable cross-site filter (XSS) and tell browser to block detected attacks
                - 'caddy.header_0.X-XSS-Protection="1; mode=block"'
                # Prevent some browsers from MIME-sniffing a response away from the declared Content-Type
                - 'caddy.header_0.X-Content-Type-Options="nosniff"'
                # Disallow the site to be rendered within a frame (clickjacking protection)
                - 'caddy.header_0.X-Frame-Options="SAMEORIGIN"'
                # Disable some features
                - 'caddy.header_0.Feature-Policy="accelerometer ''none'';ambient-light-sensor ''none''; autoplay ''none'';camera ''none'';encrypted-media ''none'';focus-without-user-activation ''none''; geolocation ''none'';gyroscope ''none'';magnetometer ''none'';microphone ''none'';midi ''none'';payment ''none'';picture-in-picture ''none''; speaker ''none'';sync-xhr ''none'';usb ''none'';vr ''none''"'
                # Cache
                - 'caddy.header_0.Cache-Control="no-cache, no-store"'
                - 'caddy.header_0.Pragma="no-cache"'
                # Referer
                - 'caddy.header_0.Referrer-Policy="no-referrer"'
                # X-Robots-Tag
                - 'caddy.header_0.X-Robots-Tag="noindex, noarchive, nofollow"'
                # Remove Server header
                - caddy.proxy.header_downstream=-server
                # CSP
                - 'caddy.header_0.Content-Security-Policy="upgrade-insecure-requests; default-src ''none''; script-src ''self''; style-src ''self'' ''unsafe-inline''; form-action ''self''; font-src ''self''; frame-ancestors ''self''; base-uri ''self''; connect-src ''self'' https://overpass-api.de; img-src ''self'' data: https://*.tile.openstreetmap.org; frame-src https://www.youtube-nocookie.com https://player.vimeo.com https://www.dailymotion.com https://www.deezer.com https://www.mixcloud.com https://w.soundcloud.com https://embed.spotify.com"'
                - 'caddy.proxy.except=/searx-checker/status.json'
                - caddy.proxy_1=/morty morty:3000
                - 'caddy.gzip_1.not=/morty'
                - 'caddy.header_1=/morty'
                - 'caddy.header_1.Content-Security-Policy="default-src ''none''; style-src ''self'' ''unsafe-inline''; form-action ''self''; frame-ancestors ''self''; base-uri ''self''; img-src ''self'' data:; font-src ''self''; frame-src ''self''"'
                #- 'caddy.header_1=-Server'
                - caddy.rewrite_0=/
                - 'caddy.rewrite_0.if_0={query} has "format=json"'
                - 'caddy.rewrite_0.if_1={query} has "format=csv"'
                - 'caddy.rewrite_0.if_2={query} has "format=rss"'
                - caddy.rewrite_0.if_op=or
                - caddy.rewrite_0.to=/deny
                - caddy.gzip_0
                - caddy.expires
                - "caddy.expires.match=static/* 1w"
                - 'caddy.limits=10KB'
                - 'caddy.header_2=/config'
                - 'caddy.header_2.Access-Control-Allow-Methods="GET, OPTIONS"'
                - 'caddy.header_2.Access-Control-Allow-Origin="*"'
                - 'caddy.header_3=/status'
                - 'caddy.header_3.Access-Control-Allow-Methods="GET, OPTIONS"'
                - 'caddy.header_3.Access-Control-Allow-Origin="*"'
                - 'caddy.root=/root/.caddy/searx'
                - 'caddy.rewrite_1=/'
                - 'caddy.rewrite_1.regexp=^/status$$'
                - 'caddy.rewrite_1.to=/searx-checker/status.json'
                - com.ouroboros.enable=true
            placement:
                constraints:
                    - node.hostname == mx.emiliendevos.be
            restart_policy:
                condition: any
        image: dalf/filtron
        command: -listen 0.0.0.0:4004 -target searx:8888
        networks:
            - default
            - proxy_global
        volumes:
            - "/data/searx/filtron/rules.json:/etc/filtron/rules.json:rw"
            - "/etc/localtime:/etc/localtime:ro"
    searx:
        deploy:
            replicas: 8
            placement:
                constraints:
                    - node.labels.cloud==oracle
            labels:
                - com.ouroboros.enable=true
            restart_policy:
                condition: any
        environment:
            - "BASE_URL=https://searx.be"
            - PGID=0
            - PUID=0
        image: woahbase/alpine-searx
        networks:
            - default
        volumes:
            - "/data/searx/settings.yml:/data/settings.yml:ro"
            - "/etc/localtime:/etc/localtime:ro"
            #- "/data/searx/poolrequests.py:/usr/local/searx/searx/poolrequests.py:ro"
            - "/data/searx/engines/googleproxy.py:/usr/local/searx/searx/engines/google.py:ro"
        logging:
            driver: none
    proxyrot:
        deploy:
            replicas: 2
            placement:
                constraints:
                    - node.labels.cloud==oracle
            labels:
                - com.ouroboros.enable=true
            restart_policy:
                condition: any
        image: productionwentdown/caddy
        volumes:
            - '/data/searx/proxyrot.Caddyfile:/etc/Caddyfile:ro'
        networks:
            - default
    morty:
        deploy:
            replicas: 2
            placement:
                constraints:
                    - node.labels.cloud==oracle
            labels:
                - com.ouroboros.enable=true
            restart_policy:
                condition: any
        command: -listen 0.0.0.0:3000 -timeout 6 -ipv6
        environment:
            - MORTY_KEY=gRb4075+gVd4KKrqcdXuJhlVS1p72hcrtKiVtpeeSSWu
        image: dalf/morty
        networks:
            - default
            - bridge
            - proxy_global
        logging:
            driver: none
    searx-checker:
        deploy:
            placement:
                constraints:
                    - node.hostname == mx.emiliendevos.be
            labels:
                - com.ouroboros.enable=true
            restart_policy:
                condition: any
        command: -cron -o html/data/status.json http://searx:8888
        volumes:
            - "/data/caddy/searx/searx-checker:/usr/local/searx-checker/html/data:rw"
        image: searx/searx-checker
        networks:
            - default
    # proxy:
    #     deploy:
    #         placement:
    #             constraints:
    #                 - node.hostname == oraclefree1
    #         labels:
    #             - com.ouroboros.enable=true
    #         restart_policy:
    #             condition: any
    #     volumes:
    #         - /data/searx/tinyproxy.conf:/etc/tinyproxy/tinyproxy.conf
    #     image: vimagick/tinyproxy
    #     networks:
    #         - default
    #         - proxygoogle
    # proxygoogle:
    #     deploy:
    #         placement:
    #             constraints:
    #                 - node.hostname == awslinuxdocker
    #         labels:
    #             - com.ouroboros.enable=true
    #         restart_policy:
    #             condition: any
    #     secrets:
    #         - AWS_ACCESS_KEY_ID
    #         - AWS_SECRET_ACCESS_KEY
    #     environment:
    #         - AWS_REGIONS=eu-central-1
    #         - PROXY_LISTENERS=:8080
    #         - PROXY_FREQUENCY_REFRESH=5m
    #     ports:
    #         - mode: host
    #           protocol: tcp
    #           published: 2222
    #           target: 2222
    #     image: unixfox/awslambdaproxy
    #     networks:
    #         - proxygoogle
    #     logging:
    #         driver: none

secrets:
    AWS_ACCESS_KEY_ID:
        external: true
    AWS_SECRET_ACCESS_KEY:
        external: true

networks:
    default:
    proxygoogle:
    proxy_global:
        external: true
    global:
        external: true
    bridge:
        external: true

version: '3.7'
services:
    caddy:
        command: '-email contact@emiliendevos.be -agree=true -log stdout'
        deploy:
            labels:
                - com.ouroboros.enable=true
            placement:
                constraints:
                    - 'node.role == manager'
            resources:
                reservations:
                    cpus: '0.1'
                    memory: 200M
            restart_policy:
                condition: any
        image: 'unixfox/caddy-docker-proxy:ci-alpine'
        environment:
            DOCKER_API_VERSION: 1.37
            DOCKER_HOST: tcp://socket:2375
        networks:
            - global
            - bridge
            - socket
        ports:
            -
                mode: host
                protocol: tcp
                published: 80
                target: 80
            -
                mode: host
                protocol: tcp
                published: 8080
                target: 8080
            -
                mode: host
                protocol: tcp
                published: 443
                target: 443
        volumes:
            - '/data/caddy:/root/.caddy'
            - '/var/log/caddy:/var/log'
            - '/etc/localtime:/etc/localtime:ro'
            - '/data/caddy/updateipv6:/updateipv6:ro'
    socket:
        image: tecnativa/docker-socket-proxy
        networks:
            - socket
        deploy:
            labels:
                - com.ouroboros.enable=true
            placement:
                constraints:
                    - 'node.role == manager'
            restart_policy:
                condition: any
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        environment:
            CONTAINERS: 1
            SERVICES: 1
            NETWORKS: 1
            CONFIGS: 1
            TASKS: 1
            NODES: 1
            INFO: 1
    php:
        deploy:
            labels:
                - com.ouroboros.enable=true
            placement:
                constraints:
                    - node.labels.cloud==aws
                    - node.labels.os==linux
            restart_policy:
                condition: any
        volumes:
            - '/etc/localtime:/etc/localtime:ro'
        image: 'php:fpm'
        networks:
            - global
networks:
    socket:
        external: true
    global:
        external: true
    bridge:
        external: true